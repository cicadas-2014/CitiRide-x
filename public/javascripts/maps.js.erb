function initialize(coords) {
  var myLatlng = new google.maps.LatLng((coords[0][0]+coords[3][0])/2,(coords[0][1]+coords[3][1])/2);
  var mapOptions = {
    zoom: 14,
    center: myLatlng
  }

  map = new google.maps.Map(document.getElementById('map'), mapOptions);
  displayRoute1walk(coords[0],coords[1]);
  displayRoutebike(coords[1],coords[2]);
  displayRoute2walk(coords[2],coords[3]);
}

function displayRoute1walk(start,start_station) {
  var directionsService = new google.maps.DirectionsService();
  var myLatlng = new google.maps.LatLng(start[0],start[1]);

  var myLatlng2 = new google.maps.LatLng(start_station[0],start_station[1]);


  var directionsDisplay = new google.maps.DirectionsRenderer();

  directionsDisplay.setMap(map);

  var request = {
    origin : myLatlng,
    destination : myLatlng2,
    travelMode : google.maps.TravelMode.WALKING
  };
  directionsService.route(request, function(response, status) {
    if (status == google.maps.DirectionsStatus.OK) {
      directionsDisplay.setOptions({ preserveViewport: true });
      directionsDisplay.setDirections(response);
      directionsDisplay.setOptions( {suppressMarkers: true})
      showStepsRoute1Walk(response);
    }
  });
}


function displayRoutebike(start_station, next_station) {
  var directionsService = new google.maps.DirectionsService();
  var myLatlng = new google.maps.LatLng(start_station[0],start_station[1]);

  var myLatlng2 = new google.maps.LatLng(next_station[0],next_station[1]);


  var directionsDisplay = new google.maps.DirectionsRenderer();

  directionsDisplay.setMap(map);

  var request = {
    origin : myLatlng,
    destination : myLatlng2,
    travelMode : google.maps.TravelMode.BICYCLING
  };
  directionsService.route(request, function(response, status) {
    if (status == google.maps.DirectionsStatus.OK) {
      directionsDisplay.setOptions({ preserveViewport: true });
      directionsDisplay.setDirections(response);
      directionsDisplay.setOptions( {suppressMarkers: true})
      showSteps(response);
    }
  });
}

function showSteps(directionResult) {
  var myRoute = directionResult.routes[0].legs[0];

  for (var i = 0; i < myRoute.steps.length; i++) {
    // var assetPath = "<%= asset_path 'stations/map-icons.png' %>";
    var icon = new google.maps.MarkerImage(
      // "<%= image_path('map-icons.png') %>",
      '/images/map-icons.png',
      new google.maps.Size(42,53),
                // new google.maps.Point(0,sprite_offset(station.availableBikes,station.availableDocks)),
                new google.maps.Point(0,sprite_offset(10,10)),
                new google.maps.Point(22,53)
                );

    if (i == 0) {
    //Icon as start position
    // icon = "https://chart.googleapis.com/chart?chst=d_map_xpin_icon&chld=pin_star|car-dealer|00FFFF|FF0000";
    var marker = new google.maps.Marker({
      position: myRoute.steps[i].start_point, 
      map: map,
      icon: icon
    });
  }
  // attachInstructionText(marker, myRoute.steps[i].instructions);
  // markerArray.push(marker);
}
//Icon as end position
var marker = new google.maps.Marker({
  position: myRoute.steps[i - 1].end_point, 
  map: map,
  icon: icon
});

}

function showStepsRoute1Walk(directionResult) {
  var myRoute = directionResult.routes[0].legs[0];

  for (var i = 0; i < myRoute.steps.length; i++) {
    // var assetPath = "<%= asset_path 'stations/map-icons.png' %>";
    
    var icon = 'https://chart.googleapis.com/chart?chst=d_map_pin_letter&chld=A|FFFFFF|000000';

    if (i == 0) {
    //Icon as start position
    // icon = "https://chart.googleapis.com/chart?chst=d_map_xpin_icon&chld=pin_star|car-dealer|00FFFF|FF0000";
    var marker = new google.maps.Marker({
      position: myRoute.steps[i].start_point, 
      map: map,
      icon: icon
    });
  }
  // attachInstructionText(marker, myRoute.steps[i].instructions);
  // markerArray.push(marker);
}

var marker = new google.maps.Marker({
  position: myRoute.steps[i - 1].end_point, 
  map: map,
  icon: icon
});

}

function showStepsRoute2Walk(directionResult) {
  var myRoute = directionResult.routes[0].legs[0];

  for (var i = 0; i < myRoute.steps.length; i++) {
    // var assetPath = "<%= asset_path 'stations/map-icons.png' %>";
    var icon = 'https://chart.googleapis.com/chart?chst=d_map_pin_letter&chld=B|FFFFFF|000000';
//     chst=d_map_pin_letter[_withshadow]
// chld=<character>|<fill_color>|<text_color>
      
    if (i == myRoute.steps.length-1) {
    //Icon as start position
    // icon = "https://chart.googleapis.com/chart?chst=d_map_xpin_icon&chld=pin_star|car-dealer|00FFFF|FF0000";
    var marker = new google.maps.Marker({
      position: myRoute.steps[i].start_point, 
      map: map,
      icon: icon
    });
  }

  // attachInstructionText(marker, myRoute.steps[i].instructions);
  // markerArray.push(marker);
}

}

function displayRoute2walk(next_station, destination) {
  var directionsService = new google.maps.DirectionsService();
  var myLatlng = new google.maps.LatLng(next_station[0],next_station[1]);


  var myLatlng2 = new google.maps.LatLng(destination[0],destination[1]);

  var directionsDisplay = new google.maps.DirectionsRenderer();


  directionsDisplay.setMap(map);

  var request = {
    origin : myLatlng,
    destination : myLatlng2,
    travelMode : google.maps.TravelMode.WALKING
  };

  directionsService.route(request, function(response, status) {
    if (status == google.maps.DirectionsStatus.OK) {
      directionsDisplay.setOptions({ preserveViewport: true });
      directionsDisplay.setDirections(response);
      directionsDisplay.setOptions( {suppressMarkers: true})
      showStepsRoute2Walk(response);
    }
  });
}

function sprite_offset(bikes,docks) {
  var index_offset=5;  
  
      // Only if the station is not reporting 0 bikes and 0 docks
      if (!(bikes==0 && docks==0)) 
      {
        var percent=Math.round(bikes/(bikes+docks)*100);

        // Use the empty icon only for empty stations, ditto for full. Anything in-between, show different icon
        if (percent==0)
          index_offset=0;
        else if (percent>0 && percent<=33)
          index_offset=1;
        else if (percent>33 && percent<67)
          index_offset=2;
        else if (percent>=67 && percent<100)
          index_offset=3;
        else if (percent==100)
          index_offset=4;
      }

        var offset=index_offset*(53+50); //53 the height of the pin portion of the image, 50 the whitespace b/t the pin portions
        return offset;
      }


      function renderMap(coords) {
        google.maps.event.addDomListener(window, 'load', initialize(coords));
      }

